# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  refreshToken: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type LoginResponse {
  access_token: String!
  refresh_token: String!
  user: User!
}

type SignupResponse {
  refreshToken: String!
  user: User!
  message: String!
}

type LogoutResponse {
  message: String!
}

type TokenResponse {
  message: String!
  access_token: String!
}

type Ingredient {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  recipes: [Recipeingredient!]
}

type Recipeingredient {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  quantity: Float!
  unit: String!
  ingredients: Ingredient
}

type Recipe {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  slag: String!
  author: User!
  description: String
  cookingTime: Float
  imageUrl: String!
  recipeingredients: [Recipeingredient!]
}

type CuisineType {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
}

type DietaryRestriction {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
}

type MealType {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
}

type SeasonalOccasion {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  recipes: [Recipe!]
}

type Query {
  user(email: String!): User!
  recipes: [Recipe!]!
  recipe(id: String!): Recipe!
  ingredients: [Ingredient!]!
  ingredientsByPartialName(partialName: String!): [Ingredient!]!
  ingredient(id: String!): Ingredient!
  recipeingredients: [Recipeingredient!]!
  cuisineTypes: [CuisineType!]!
  cuisineType(id: String!): CuisineType!
  dietaryRestrictions: [DietaryRestriction!]!
  dietaryRestriction(id: String!): DietaryRestriction!
  mealTypes: [MealType!]!
  mealType(id: String!): MealType!
  seasonalOccasions: [SeasonalOccasion!]!
  seasonalOccasion(id: String!): SeasonalOccasion!
}

type Mutation {
  removeUser(id: Int!): User!
  signup(signupUserInput: SignupUserInput!): SignupResponse!
  login(loginUserInput: LoginUserInput!): LoginResponse!
  logout: LogoutResponse!
  refreshJwtToken: TokenResponse!
  createRecipe(createRecipeInput: CreateRecipeInput!): Recipe!
  updateRecipe(updateRecipeInput: UpdateRecipeInput!): Recipe!
  removeRecipe(id: String!): Recipe!
  createIngredient(createIngredientInput: CreateIngredientInput!): Ingredient!
  updateIngredient(updateIngredientInput: UpdateIngredientInput!): Ingredient!
  removeIngredient(id: String!): Ingredient!
  createRecipeingredient(createRecipeingredientInput: CreateRecipeingredientInput!): Recipeingredient!
  createCuisineType(createCuisineTypeInput: CreateCuisineTypeInput!): CuisineType!
  updateCuisineType(updateCuisineTypeInput: UpdateCuisineTypeInput!): CuisineType!
  removeCuisineType(id: String!): CuisineType!
  createDietaryRestriction(createDietaryRestrictionInput: CreateDietaryRestrictionInput!): DietaryRestriction!
  updateDietaryRestriction(updateDietaryRestrictionInput: UpdateDietaryRestrictionInput!): DietaryRestriction!
  removeDietaryRestriction(id: String!): DietaryRestriction!
  createMealType(createMealTypeInput: CreateMealTypeInput!): MealType!
  updateMealType(updateMealTypeInput: UpdateMealTypeInput!): MealType!
  removeMealType(id: String!): MealType!
  createSeasonalOccasion(createSeasonalOccasionInput: CreateSeasonalOccasionInput!): SeasonalOccasion!
  updateSeasonalOccasion(updateSeasonalOccasionInput: UpdateSeasonalOccasionInput!): SeasonalOccasion!
  removeSeasonalOccasion(id: String!): SeasonalOccasion!
}

input SignupUserInput {
  email: String!
  password: String!
}

input LoginUserInput {
  email: String!
  password: String!
}

input CreateRecipeInput {
  name: String!
  slag: String!
  cookingTime: Float!
  userId: String!
  categoryId: String!
  description: String!
  imageUrl: String!
}

input UpdateRecipeInput {
  name: String!
  slag: String!
  cookingTime: Float!
  userId: String
  categoryId: String!
  description: String!
  imageUrl: String!
}

input CreateIngredientInput {
  name: String!
}

input UpdateIngredientInput {
  name: String!
}

input CreateRecipeingredientInput {
  quantity: Float!
  unit: String!
  recipeId: String!
  ingredientId: String!
}

input CreateCuisineTypeInput {
  name: String!
}

input UpdateCuisineTypeInput {
  name: String!
}

input CreateDietaryRestrictionInput {
  name: String!
}

input UpdateDietaryRestrictionInput {
  name: String!
}

input CreateMealTypeInput {
  name: String!
}

input UpdateMealTypeInput {
  name: String!
}

input CreateSeasonalOccasionInput {
  name: String!
}

input UpdateSeasonalOccasionInput {
  name: String!
}