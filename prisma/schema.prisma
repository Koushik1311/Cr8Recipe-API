generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// User model
model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime @default(now()) @db.Date
  updatedAt    DateTime @updatedAt @db.Date
  email        String   @unique
  password     String
  refreshToken String?
  recipes      Recipe[]
}

// Category model
model Category {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now()) @db.Date
  updatedAt   DateTime @updatedAt @db.Date
  title       String
  description String
  recipes     Recipe[]
}

// Recipe model
model Recipe {
  id                String             @id @default(auto()) @map("_id") @db.ObjectId
  createdAt         DateTime           @default(now()) @db.Date
  updatedAt         DateTime           @updatedAt @db.Date
  name              String
  slag              String
  author            User               @relation(fields: [userId], references: [id])
  description       String?
  cookingTime       Float?
  category          Category           @relation(fields: [categoryId], references: [id])
  userId            String             @db.ObjectId
  steps             Step[]
  categoryId        String             @db.ObjectId
  recipeingredients RecipeIngredient[]
}

// Ingredient model
model Ingredient {
  id                String             @id @default(auto()) @map("_id") @db.ObjectId
  createdAt         DateTime           @default(now()) @db.Date
  updatedAt         DateTime           @updatedAt @db.Date
  name              String
  recipeingredients RecipeIngredient[]
}

model RecipeIngredient {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime   @default(now()) @db.Date
  updatedAt    DateTime   @updatedAt @db.Date
  quantity     Float
  unit         String
  recipes      Recipe     @relation(fields: [recipeId], references: [id])
  ingredients  Ingredient @relation(fields: [ingredientId], references: [id])
  recipeId     String     @db.ObjectId
  ingredientId String     @db.ObjectId
}

// Strp model
model Step {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now()) @db.Date
  updatedAt   DateTime @updatedAt @db.Date
  order       Int
  description String
  recipe      Recipe   @relation(fields: [recipeId], references: [id])
  recipeId    String   @db.ObjectId
}

// TODO: Nutrition & Calories model
